<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appSeDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_video_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\VideoBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/video/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::homepageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'company_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CompanyController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/company/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'company_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CompanyController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/company/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'company_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CompanyController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/company',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'company_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CompanyController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/company',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'company_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CompanyController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/company',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_gentelella' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 'index',    '_controller' => 'AppBundle\\Controller\\GentelellaController::gentelellaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/gentelella',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\GentelellaController::homepageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SidebarController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_calendar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SidebarController::calendarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/calendar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_contacts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SidebarController::contactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contacts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\TopNavController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_user_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/user/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_user_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/app/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/app/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/app/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'users_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserNewController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/temp/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'users_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserNewController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/temp/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'users_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserNewController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/users/temp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'users_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserNewController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users/temp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'users_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserNewController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/users/temp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dms_documents_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Dms\\DocumentsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_newsletter_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\NewsletterBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_customer_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\CustomerBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_calendar_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\CalendarBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_invoice_invoice_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\InvoiceBundle\\Controller\\Backend\\InvoiceController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/crm/invoice/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_order_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\OrderBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'crm_contacts_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Crm\\ContactsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_add_attribute_set_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\AttributeSetController::addAttributeSetAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/attributeSet/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_list_attribute_sets_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\AttributeSetController::listAttributeSetsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/attributeSet/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_update_attribute_set_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\AttributeSetController::updateAttributeSetAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/update',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/attributeSet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_show_attribute_set_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\AttributeSetController::showAttributeSetAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/show',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/attributeSet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_delete_attribute_set_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\AttributeSetController::deleteAttributeSetAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/attributeSet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_add_product_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\ProductController::addProductAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/product/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_list_product_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\ProductController::listProductAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/products/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_update_product_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\ProductController::updateProductAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/product/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_delete_product_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\ProductController::deleteProductAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/product/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_add_category_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\CategoryController::addCategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/category/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_list_categories_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\CategoryController::listCategoriesAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/categories/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_update_category_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\CategoryController::updateCategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/category/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_delete_category_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\CategoryController::deleteCategoryAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/category/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_add_tag_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\TagsController::addTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/tag/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_list_tags_v1' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\TagsController::listTagsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/tags/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_update_tag_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\TagsController::updateTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/update',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_show_tag_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\TagsController::showTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/show',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rest_delete_tag_v1' => array (  0 =>   array (    0 => 'uuid',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Rest\\TagsController::deleteTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_attribute_set_backend_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\AttributeSetController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/attribute/set/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_attribute_set_backend_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\AttributeSetController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/attribute/set/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_attribute_set_backend_delete' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\AttributeSetController::deleteAction',  ),  2 =>   array (    0 => 'uuid',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/attribute/set/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_attribute_set_backend_show' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\AttributeSetController::showAction',  ),  2 =>   array (    0 => 'uuid',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/attribute/set/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_attribute_set_backend_edit' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    'uuid' => 'none',    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\AttributeSetController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/attribute/set/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_category_backend_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\CategoryController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/category/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_category_backend_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\CategoryController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/category/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_product_backend_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\ProductController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/product/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_product_backend_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\ProductController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/product/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_tag_backend_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\TagsController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/tags/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_tag_backend_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\TagsController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pim/tags/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_tag_backend_show' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\TagsController::showAction',  ),  2 =>   array (    0 => 'uuid',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/tags/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_tag_backend_delete' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\TagsController::deleteAction',  ),  2 =>   array (    0 => 'uuid',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/tags/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pim_tag_backend_edit' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    'uuid' => 'none',    '_controller' => 'Pim\\ProductBundle\\Controller\\Backend\\TagsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/pim/tags/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nelmio_api_doc_index' => array (  0 =>   array (    0 => 'view',  ),  1 =>   array (    '_controller' => 'Nelmio\\ApiDocBundle\\Controller\\ApiDocController::indexAction',    'view' => 'default',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'view',    ),    1 =>     array (      0 => 'text',      1 => '/apidoc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ef_connect' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::loadAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/efconnect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'elfinder' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::showAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/elfinder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
